{"version":3,"sources":["index.js"],"names":["CountdownTimer","targetDate","selector","selectorRef","document","querySelector","daysRef","hoursRef","minsRef","secsRef","intervalID","deltaTime","start","setInterval","currentTime","Date","now","days","pad","Math","floor","hours","mins","secs","insertValues","value","String","padStart","textContent","timer"],"mappings":";AAyCA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAzCMA,IAAAA,EAAAA,WACiC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,SAAY,EAAA,KAAA,GAChCC,KAAAA,YAAcC,SAASC,cAAcH,GACrCI,KAAAA,QAAU,KAAKH,YAAYE,cAAc,uBACzCE,KAAAA,SAAW,KAAKJ,YAAYE,cAAc,wBAC1CG,KAAAA,QAAU,KAAKL,YAAYE,cAAc,uBACzCI,KAAAA,QAAU,KAAKN,YAAYE,cAAc,uBACzCJ,KAAAA,WAAaA,EACbS,KAAAA,WAAa,KACbC,KAAAA,UAAY,EAEZC,KAAAA,QA8BP,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA5BC,MAAA,WAAQ,IAAA,EAAA,KACFF,KAAAA,WAAaG,YAAY,WACzBC,IAAAA,EAAcC,KAAKC,MACvB,EAAKL,UAAY,EAAKV,WAAaa,EAE7BG,IAAAA,EAAO,EAAKC,IAAIC,KAAKC,MAAM,EAAKT,UAAa,QAC7CU,EAAQ,EAAKH,IAClBC,KAAKC,MAAO,EAAKT,UAAa,MAAyB,OAElDW,EAAO,EAAKJ,IACjBC,KAAKC,MAAO,EAAKT,UAAa,KAAoB,MAE7CY,EAAO,EAAKL,IAAIC,KAAKC,MAAO,EAAKT,UAAa,IAAc,MAClE,EAAKa,aAAaP,EAAMI,EAAOC,EAAMC,IACnC,OAcL,CAAA,IAAA,MAXC,MAAA,SAAIE,GACIC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAUnC,CAAA,IAAA,eAPC,MAAA,SAAaV,EAAMI,EAAOC,EAAMC,GAC1BjB,KAAAA,QAAQsB,YAAcX,EACtBV,KAAAA,SAASqB,YAAcP,EACvBb,KAAAA,QAAQoB,YAAcN,EACtBb,KAAAA,QAAQmB,YAAcL,MAG7B,EAzCMvB,GAyCA6B,EAAQ,IAAI7B,EAAe,CAChCE,SAAU,WACVD,WAAY,IAAIc,KAAK","file":"goit-js-hw-11-timer.350229fc.js","sourceRoot":"..","sourcesContent":["class CountdownTimer {\r\n constructor({ targetDate, selector }) {\r\n  this.selectorRef = document.querySelector(selector);\r\n  this.daysRef = this.selectorRef.querySelector('[data-value=\"days\"]');\r\n  this.hoursRef = this.selectorRef.querySelector('[data-value=\"hours\"]');\r\n  this.minsRef = this.selectorRef.querySelector('[data-value=\"mins\"]');\r\n  this.secsRef = this.selectorRef.querySelector('[data-value=\"secs\"]');\r\n  this.targetDate = targetDate;\r\n  this.intervalID = null;\r\n  this.deltaTime = 0;\r\n\r\n  this.start();\r\n }\r\n start() {\r\n  this.intervalID = setInterval(() => {\r\n   let currentTime = Date.now();\r\n   this.deltaTime = this.targetDate - currentTime;\r\n\r\n   const days = this.pad(Math.floor(this.deltaTime / (1000 * 60 * 60 * 24)));\r\n   const hours = this.pad(\r\n    Math.floor((this.deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n   );\r\n   const mins = this.pad(\r\n    Math.floor((this.deltaTime % (1000 * 60 * 60)) / (1000 * 60)),\r\n   );\r\n   const secs = this.pad(Math.floor((this.deltaTime % (1000 * 60)) / 1000));\r\n   this.insertValues(days, hours, mins, secs);\r\n  }, 1000);\r\n }\r\n\r\n pad(value) {\r\n  return String(value).padStart(2, '0');\r\n }\r\n\r\n insertValues(days, hours, mins, secs) {\r\n  this.daysRef.textContent = days;\r\n  this.hoursRef.textContent = hours;\r\n  this.minsRef.textContent = mins;\r\n  this.secsRef.textContent = secs;\r\n }\r\n}\r\nconst timer = new CountdownTimer({\r\n selector: '#timer-1',\r\n targetDate: new Date('Feb 13, 2022'),\r\n});\r\n"]}